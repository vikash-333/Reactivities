{"version":3,"sources":["app/models/Activity.ts","app/models/Pagination.ts","app/api/agent.ts","app/models/Profiles.ts","app/stores/activityStore.ts","app/stores/profileStore.ts","app/stores/userStore.ts","app/stores/store.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/commentStore.ts","app/layout/NavBar.tsx","features/activities/dashboard/ActivityFilters.tsx","features/profiles/FollowButton.tsx","features/profiles/ProfileCard.tsx","features/activities/dashboard/ActivityListItemAttendees.tsx","features/activities/dashboard/ActivityListItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityListItemPlaceholder.tsx","features/activities/dashboard/ActivityDashboard.tsx","app/common/form/MyTextInput.tsx","features/users/LoginForm.tsx","features/errors/ValidationErrors.tsx","features/users/RegisterForm.tsx","features/home/HomePage.tsx","app/layout/LoadingComponent.tsx","app/common/form/MyTextArea.tsx","app/common/form/MySelectInput.tsx","app/common/options/categoryOptions.ts","app/common/form/MyDateInput.tsx","features/activities/form/ActivityForm.tsx","features/activities/details/ActivityDetailedChat.tsx","features/activities/details/ActivityDetailedHeader.tsx","features/activities/details/ActivityDetailedInfo.tsx","features/activities/details/ActivityDetailedSideBar.tsx","features/activities/details/ActivityDetail.tsx","features/errors/TestError.tsx","features/errors/NotFound.tsx","features/errors/ServerError.tsx","app/common/modals/ModalContainer.tsx","features/profiles/ProfileEditForm.tsx","features/profiles/ProfileAbout.tsx","features/profiles/ProfileActivities.tsx","features/profiles/ProfileFollowings.tsx","app/common/imageUpload/PhotoUploadWidgetDropzone.tsx","app/common/imageUpload/PhotoWidgetCropper.tsx","app/common/imageUpload/PhotoUploadWidget.tsx","features/profiles/ProfilePhotos.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfileHeader.tsx","features/profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["Activity","init","Object","assign","this","ActivityFormValues","activity","id","undefined","title","description","category","city","venue","date","PaginatedResult","data","pagination","PagingParams","pageNumber","pageSize","axios","defaults","baseURL","process","interceptors","response","use","a","headers","JSON","parse","error","status","config","toast","method","errors","hasOwnProperty","history","push","modalStateErrors","key","flat","store","commonStore","setServerError","Promise","reject","request","token","Authorization","responseBody","requests","url","get","then","body","post","put","delete","agent","Activities","list","params","details","create","update","attend","Account","current","login","user","register","Profiles","username","uploadPhoto","file","formData","FormData","append","setMainPhoto","deletePhoto","updateProfile","profile","updateFollowing","listFollowings","predicate","listActivities","Profile","userName","displayName","image","ActivityStore","activityRegistry","Map","selectedActivity","loading","loadingInitial","editMode","submitting","pagingParams","set","setPredicate","value","resetPredicate","forEach","setPagingParams","loadActivities","axiosParams","result","setActivity","runInAction","console","log","loadActivity","getActivity","userStore","isGoing","attendees","some","isHost","hostUsername","host","find","Date","createActivity","attendee","newActivity","updateActivity","updatedActivity","deleteActivity","updateAttendance","filter","x","cancelActivityToggle","isCancelled","clearSelectedActivity","updateAttendeeFollowing","following","followersCount","makeAutoObservable","reaction","keys","clear","URLSearchParams","toString","toISOString","Array","from","values","sort","b","getTime","entries","activitiesByDate","reduce","activities","format","ProfileStore","loadingProfile","uploading","followings","loadingFollowings","activeTab","loadingActivities","UserActivities","setActiveTab","loadProfile","photo","photos","isMain","setImage","p","setDisplayName","activityStore","followingCount","loadFollowings","UserStore","creds","setToken","modalStore","closeModal","logout","window","localStorage","removeItem","getUser","getItem","appLoaded","setAppLoaded","setItem","modal","open","openModal","content","profileStore","commentStore","comments","hubConnection","createHubConnection","activityId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","catch","on","comment","createdAt","unshift","stopHubConnection","stop","clearComments","addComment","invoke","StoreContext","createContext","useStore","useContext","observer","Menu","inverted","fixed","Container","Item","as","NavLink","to","exact","header","src","alt","style","marginRight","name","Button","positive","position","Image","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","vertical","size","width","marginTop","Header","attached","color","active","has","onChange","Reveal","animated","Content","visible","fluid","hidden","basic","e","preventDefault","handleFollowing","Card","Description","str","length","substring","truncate","bio","extra","Icon","styles","borderColor","borderWidth","List","horizontal","map","Popup","hoverable","trigger","bordered","circular","Segment","Group","Label","textAlign","marginBottom","ItemDescription","secondary","clearing","floated","groupedActivities","group","sub","ActivityListItemPlaceholder","Placeholder","minHeight","Line","Paragraph","disabled","useState","loadingNext","setLoadingNext","useEffect","Grid","Column","pageStart","loadMore","currentPage","hasMore","totalPages","initialLoad","Loader","MyTextInput","props","useField","field","meta","Form","Field","touched","label","initialValues","email","password","onSubmit","setErrors","handleSubmit","isSubmitting","className","autoComplete","placeholder","type","render","ValidationErrors","Message","err","i","validationSchema","Yup","required","isValid","dirty","isLoggedIn","LoadingComponent","Dimmer","MyTextArea","TextArea","MySelectInput","helpers","Select","clearable","options","d","setValue","onBlur","setTouched","categoryOptions","MyDateInput","selected","useParams","useHistory","nullable","enableReinitialize","uuid","handleFormSubmit","rows","placeholderText","showTimeSelect","timeCaption","dateFormat","border","resetForm","onKeyPress","shiftKey","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","whiteSpace","activityImageStyle","activityImageTextStyle","bottom","left","height","padding","zIndex","top","ribbon","verticalAlign","relaxed","divided","Extra","ActivityDetailedSideBar","TestErrors","widths","baseUrl","primary","NotFound","Inline","message","Modal","onClose","setEditMode","isCurrentUser","Tab","Pane","panes","menuItem","pane","menu","onTabChange","activeIndex","handleTabChange","itemsPerRow","objectFit","Meta","PhotoUploadWidgetDropzone","setFiles","dzStyles","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","preview","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoWidgetCropper","imagePreview","setCropper","initialAspectRatio","aspectRatio","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoUploadWidget","photoUpload","files","revokeObjectURL","overflow","getCroppedCanvas","toBlob","blob","addPhotoMode","setAddPhotoMode","target","setTarget","currentTarget","handleSetMainPhoto","handleDeletePhoto","menuPosition","Statistic","Divider","Component","component","rest","location","useLocation","finally","hideProgressBar","path","HomePage","ActivityDashboard","ActivityForm","ActivityDetail","ProfilePage","ServerError","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","scrollTo","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.7a08d43c.chunk.js","sourcesContent":["import { Profile } from \"./Profiles\";\n\nexport interface Activity {\n  id: string;\n  title: string;\n  date: Date | null;\n  description: string;\n  category: string;\n  city: string;\n  venue: string;\n  hostUsername: string;\n  isCancelled: boolean;\n  isGoing: boolean;\n  isHost: boolean;\n  host?: Profile;\n  attendees?: Profile[];\n}\n\nexport class Activity implements Activity {\n  constructor(init?: ActivityFormValues) {\n    Object.assign(this, init);\n  }\n}\n\nexport class ActivityFormValues {\n  id?: string = undefined;\n  title: string = \"\";\n  description: string = \"\";\n  category: string = \"\";\n  city: string = \"\";\n  venue: string = \"\";\n  date: Date | null = null;\n\n  constructor(activity?: ActivityFormValues) {\n    if (activity) {\n      this.id = activity.id;\n      this.title = activity.title;\n      this.description = activity.description;\n      this.category = activity.category;\n      this.city = activity.city;\n      this.venue = activity.venue;\n      this.date = activity.date;\n    }\n  }\n}\n","export interface Pagination {\n  currentPage: number;\n  itemsPerPage: number;\n  totalItems: number;\n  totalPages: number;\n}\n\nexport class PaginatedResult<T> {\n  data: T;\n  pagination: Pagination;\n\n  constructor(data: T, pagination: Pagination) {\n    this.data = data;\n    this.pagination = pagination;\n  }\n}\n\nexport class PagingParams {\n  pageNumber: number;\n  pageSize: number;\n  constructor(pageNumber = 1, pageSize = 4) {\n    this.pageNumber = pageNumber;\n    this.pageSize = pageSize;\n  }\n}\n","import axios, { AxiosError, AxiosResponse } from \"axios\";\nimport { toast } from \"react-toastify\";\nimport { history } from \"../..\";\nimport { Activity, ActivityFormValues } from \"../models/Activity\";\nimport { PaginatedResult, PagingParams } from \"../models/Pagination\";\nimport { Photo, Profile, UserActivity } from \"../models/Profiles\";\nimport { User, UserFormValues } from \"../models/user\";\nimport CommonStore from \"../stores/commonStore\";\nimport { store } from \"../stores/store\";\nimport UserStore from \"../stores/userStore\";\n\nconst sleep = (delay: number) => {\n  return new Promise((resolve) => {\n    setTimeout(resolve, delay);\n  });\n};\n\naxios.defaults.baseURL = process.env.REACT_APP_API_URL;\n\naxios.interceptors.response.use(\n  async (response) => {\n    if (process.env.NODE_ENV === \"development\") await sleep(1000);\n\n    const pagination = response.headers[\"pagination\"];\n    if (pagination) {\n      response.data = new PaginatedResult(\n        response.data,\n        JSON.parse(pagination)\n      );\n      return response as AxiosResponse<PaginatedResult<any>>;\n    }\n    return response;\n  },\n  (error: AxiosError) => {\n    const { data, status, config } = error.response!;\n    switch (status) {\n      case 400:\n        if (typeof data == \"string\") {\n          toast.error(data);\n        }\n        if (config.method == \"get\" && data.errors.hasOwnProperty(\"id\")) {\n          history.push(\"/not-found\");\n        }\n        if (data.errors) {\n          const modalStateErrors = [];\n          for (const key in data.errors) {\n            if (data.errors[key]) {\n              modalStateErrors.push(data.errors[key]);\n            }\n          }\n          throw modalStateErrors.flat();\n        }\n        break;\n      case 401:\n        toast.error(\"unauthorised\");\n        break;\n      case 404:\n        history.push(\"/not-found\");\n        break;\n      case 500:\n        store.commonStore.setServerError(data);\n        history.push(\"/server-error\");\n        break;\n    }\n    return Promise.reject(error);\n  }\n);\n\naxios.interceptors.request.use((config) => {\n  var token = store.commonStore.token;\n  if (token) config.headers.Authorization = `Bearer ${token}`;\n  return config;\n});\n\nconst responseBody = <T>(response: AxiosResponse<T>) => response.data;\n\nconst requests = {\n  get: <T>(url: string) => axios.get<T>(url).then(responseBody),\n  post: <T>(url: string, body: {}) => axios.post(url, body).then(responseBody),\n  put: <T>(url: string, body: {}) => axios.put(url, body).then(responseBody),\n  delete: <T>(url: string) => axios.delete(url).then(responseBody),\n};\n\nconst Activities = {\n  list: (params: URLSearchParams) =>\n    axios\n      .get<PaginatedResult<Activity[]>>(\"/activities\", { params })\n      .then(responseBody),\n  details: (id: string) => requests.get<Activity>(`/activities/${id}`),\n  create: (activity: ActivityFormValues) =>\n    requests.post<Activity>(\"/activities/\", activity),\n  update: (activity: ActivityFormValues) =>\n    requests.put<Activity>(`/activities/${activity.id}`, activity),\n  delete: (id: string) => requests.delete<Activity>(`/activities/${id}`),\n  attend: (id: string) => requests.post(`/activities/${id}/attend`, {}),\n};\n\nconst Account = {\n  current: () => requests.get<User>(\"/account\"),\n  login: (user: UserFormValues) => requests.post<User>(\"/account/login\", user),\n  register: (user: UserFormValues) =>\n    requests.post<User>(\"/account/register\", user),\n};\n\nconst Profiles = {\n  get: (username: string) => requests.get<Profile>(`/profiles/${username}`),\n  uploadPhoto: (file: Blob) => {\n    let formData = new FormData();\n    formData.append(\"File\", file);\n    return axios.post<Photo>(\"photos\", formData, {\n      headers: { \"Content-type\": \"multipart/form-data\" },\n    });\n  },\n  setMainPhoto: (id: string) => requests.post(`/photos/${id}/setMain`, {}),\n  deletePhoto: (id: string) => requests.delete(`/photos/${id}`),\n  updateProfile: (profile: Partial<Profile>) =>\n    requests.put(\"/profiles\", profile),\n  updateFollowing: (username: string) =>\n    requests.post(`/follow/${username}`, {}),\n  listFollowings: (username: string, predicate: string) =>\n    requests.get<Profile[]>(`/follow/${username}?predicate=${predicate}`),\n  listActivities: (username: string, predicate: string) =>\n    requests.get<UserActivity[]>(\n      `/profiles/${username}/activities?predicate=${predicate}`\n    ),\n};\nconst agent = {\n  Activities,\n  Account,\n  Profiles,\n};\n\nexport default agent;\n","import { string } from \"yup/lib/locale\";\nimport { User } from \"./user\";\n\nexport interface Profile {\n  username: string;\n  displayName: string;\n  image?: string;\n  bio?: string;\n  followersCount: number;\n  followingCount: number;\n  following: boolean;\n  photos?: Photo[];\n}\n\nexport class Profile implements Profile {\n  constructor(user: User) {\n    this.username = user.userName;\n    this.displayName = user.displayName;\n    this.image = user.image;\n  }\n}\n\nexport interface Photo {\n  id: string;\n  url: string;\n  isMain: boolean;\n}\n\nexport interface UserActivity {\n  id: string;\n  title: string;\n  category: string;\n  date: Date;\n}\n","import { format } from \"date-fns\";\nimport { makeAutoObservable, reaction, runInAction } from \"mobx\";\nimport { Activity, ActivityFormValues } from \"../models/Activity\";\nimport agent from \"../api/agent\";\nimport { store } from \"./store\";\nimport { Profile } from \"../models/Profiles\";\nimport { Pagination, PagingParams } from \"../models/Pagination\";\n\nexport default class ActivityStore {\n  activityRegistry = new Map<string, Activity>();\n  selectedActivity: Activity | null = null;\n  loading = false;\n  loadingInitial = false;\n  editMode = false;\n  submitting = false;\n  pagination: Pagination | null = null;\n  pagingParams = new PagingParams();\n  predicate = new Map().set(\"all\", true);\n\n  constructor() {\n    makeAutoObservable(this);\n    reaction(\n      () => this.predicate.keys(),\n      () => {\n        this.pagingParams = new PagingParams();\n        this.activityRegistry.clear();\n        this.loadActivities();\n      }\n    );\n  }\n\n  setPredicate = (predicate: string, value: string | Date) => {\n    const resetPredicate = () => {\n      this.predicate.forEach((value, key) => {\n        if (key !== \"startDate\") this.predicate.delete(key);\n      });\n    };\n\n    switch (predicate) {\n      case \"all\":\n        resetPredicate();\n        this.predicate.set(\"all\", true);\n        break;\n      case \"isGoing\":\n        resetPredicate();\n        this.predicate.set(\"isGoing\", true);\n        break;\n      case \"isHost\":\n        resetPredicate();\n        this.predicate.set(\"isHost\", true);\n        break;\n      case \"startDate\":\n        this.predicate.delete(\"startDate\");\n        this.predicate.set(\"startDate\", value);\n        break;\n    }\n  };\n\n  setPagingParams = (pagingParams: PagingParams) => {\n    this.pagingParams = pagingParams;\n  };\n\n  get axiosParams() {\n    var params = new URLSearchParams();\n    params.append(\"pageNumber\", this.pagingParams.pageNumber.toString());\n    params.append(\"pageSize\", this.pagingParams.pageSize.toString());\n    this.predicate.forEach((value, key) => {\n      if (key === \"startDate\") {\n        params.append(key, (value as Date).toISOString());\n      } else {\n        params.append(key, value);\n      }\n    });\n    return params;\n  }\n\n  get activitiesByDate() {\n    return Array.from(this.activityRegistry.values()).sort(\n      (a, b) => a.date!.getTime() - b.date!.getTime()\n    );\n  }\n\n  get groupedActivities() {\n    return Object.entries(\n      this.activitiesByDate.reduce((activities, activity) => {\n        const date = format(activity.date!, \"dd MMM yyyy\");\n        activities[date] = activities[date]\n          ? [...activities[date], activity]\n          : [activity];\n        return activities;\n      }, {} as { [key: string]: Activity[] })\n    );\n  }\n\n  loadActivities = async () => {\n    this.loadingInitial = true;\n    try {\n      const result = await agent.Activities.list(this.axiosParams);\n      result.data.forEach((activity) => {\n        this.setActivity(activity);\n      });\n      //this.setPagination(result.pagination);\n      runInAction(() => {\n        this.loadingInitial = false;\n        this.pagination = result.pagination;\n      });\n    } catch (error) {\n      console.log(error);\n      runInAction(() => {\n        this.loadingInitial = false;\n      });\n    }\n  };\n\n  /*  setPagination = (pagination: Pagination) => {\n    this.pagination = pagination;\n  }; */\n\n  loadActivity = async (id: string) => {\n    let activity = this.getActivity(id);\n    if (activity) {\n      this.selectedActivity = activity;\n      return activity;\n    } else {\n      this.loadingInitial = true;\n      try {\n        activity = await agent.Activities.details(id);\n\n        this.setActivity(activity);\n        runInAction(() => {\n          this.selectedActivity = activity ?? null;\n          this.loadingInitial = false;\n        });\n        return activity;\n      } catch (error) {\n        console.log(error);\n        runInAction(() => {\n          this.loadingInitial = false;\n        });\n      }\n    }\n  };\n\n  private setActivity = (activity: Activity) => {\n    const user = store.userStore.user;\n    if (user) {\n      activity.isGoing = activity.attendees!.some(\n        (a) => a.username === user.userName\n      );\n      activity.isHost = activity.hostUsername === user.userName;\n      activity.host = activity.attendees?.find(\n        (a) => a.username === activity.hostUsername\n      );\n    }\n    activity.date = new Date(activity.date!);\n    this.activityRegistry.set(activity.id, activity);\n  };\n\n  private getActivity = (id: string) => {\n    return this.activityRegistry.get(id);\n  };\n\n  createActivity = async (activity: ActivityFormValues) => {\n    const user = store.userStore.user;\n    const attendee = new Profile(user!);\n    try {\n      await agent.Activities.create(activity);\n      const newActivity = new Activity(activity);\n      newActivity.hostUsername = user!.userName;\n      newActivity.attendees = [attendee];\n      this.setActivity(newActivity);\n      runInAction(() => {\n        this.selectedActivity = newActivity;\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  updateActivity = async (activity: ActivityFormValues) => {\n    try {\n      await agent.Activities.update(activity);\n\n      runInAction(() => {\n        if (activity.id) {\n          let updatedActivity = {\n            ...this.getActivity(activity.id),\n            ...activity,\n          };\n          this.activityRegistry.set(activity.id, updatedActivity as Activity);\n          this.selectedActivity = updatedActivity as Activity;\n        }\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  deleteActivity = async (id: string) => {\n    this.loading = true;\n    try {\n      await agent.Activities.delete(id);\n\n      runInAction(() => {\n        this.activityRegistry.delete(id);\n        this.loading = false;\n      });\n    } catch (error) {\n      console.log(error);\n      runInAction(() => {\n        this.loading = false;\n      });\n    }\n  };\n\n  updateAttendance = async () => {\n    const user = store.userStore.user;\n    this.loading = true;\n    try {\n      await agent.Activities.attend(this.selectedActivity!.id);\n      runInAction(() => {\n        if (this.selectedActivity?.isGoing) {\n          this.selectedActivity.attendees = this.selectedActivity.attendees?.filter(\n            (x) => x.username != user?.userName\n          );\n          this.selectedActivity.isGoing = false;\n        } else {\n          const attendee = new Profile(user!);\n          this.selectedActivity?.attendees?.push(attendee);\n          this.selectedActivity!.isGoing = true;\n        }\n        this.activityRegistry.set(\n          this.selectedActivity!.id,\n          this.selectedActivity!\n        );\n      });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      runInAction(() => (this.loading = false));\n    }\n  };\n\n  cancelActivityToggle = async () => {\n    this.loading = true;\n    try {\n      await agent.Activities.attend(this.selectedActivity!.id);\n\n      runInAction(() => {\n        this.selectedActivity!.isCancelled = !this.selectedActivity\n          ?.isCancelled;\n        this.activityRegistry.set(\n          this.selectedActivity!.id,\n          this.selectedActivity!\n        );\n      });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      runInAction(() => (this.loading = false));\n    }\n  };\n\n  clearSelectedActivity = () => {\n    this.selectedActivity = null;\n  };\n\n  updateAttendeeFollowing = (username: string) => {\n    this.activityRegistry.forEach((activity) => {\n      activity.attendees?.forEach((attendee) => {\n        if (attendee.username === username) {\n          attendee.following\n            ? attendee.followersCount--\n            : attendee.followersCount++;\n          attendee.following = !attendee.following;\n        }\n      });\n    });\n  };\n}\n","import userEvent from \"@testing-library/user-event\";\nimport { makeAutoObservable, reaction, runInAction } from \"mobx\";\nimport agent from \"../api/agent\";\nimport { Photo, Profile, UserActivity } from \"../models/Profiles\";\nimport { store } from \"./store\";\nimport UserStore from \"./userStore\";\n\nexport default class ProfileStore {\n  profile: Profile | null = null;\n  loadingProfile = false;\n  uploading = false;\n  loading = false;\n  followings: Profile[] = [];\n  loadingFollowings = false;\n  activeTab = 0;\n  loadingActivities = false;\n  UserActivities: UserActivity[] = [];\n\n  constructor() {\n    makeAutoObservable(this);\n\n    reaction(\n      () => this.activeTab,\n      (activeTab) => {\n        if (activeTab === 3 || activeTab === 4) {\n          var predicate = activeTab == 3 ? \"followers\" : \"following\";\n          this.loadFollowings(predicate);\n        } else {\n          this.followings = [];\n        }\n      }\n    );\n  }\n\n  setActiveTab = (activeTab: any) => {\n    this.activeTab = activeTab;\n  };\n\n  get isCurrentUser() {\n    if (store.userStore.user && this.profile) {\n      return store.userStore.user.userName === this.profile.username;\n    }\n    return false;\n  }\n\n  loadProfile = async (username: string) => {\n    this.loadingProfile = true;\n    try {\n      var profile = await agent.Profiles.get(username);\n      runInAction(() => {\n        this.profile = profile;\n        this.loadingProfile = false;\n      });\n    } catch (error) {\n      console.log(error);\n      runInAction(() => (this.loadingProfile = false));\n    }\n  };\n\n  uploadPhoto = async (file: Blob) => {\n    this.uploading = true;\n    try {\n      const response = await agent.Profiles.uploadPhoto(file);\n      const photo = response.data;\n      runInAction(() => {\n        if (this.profile) {\n          this.profile.photos?.push(photo);\n          if (photo.isMain && store.userStore.user) {\n            store.userStore.setImage(photo.url);\n            this.profile.image = photo.url;\n          }\n        }\n        this.uploading = false;\n      });\n    } catch (error) {\n      console.log(error);\n      runInAction(() => (this.uploading = false));\n    }\n  };\n\n  setMainPhoto = async (photo: Photo) => {\n    this.loading = true;\n    try {\n      await agent.Profiles.setMainPhoto(photo.id);\n      store.userStore.setImage(photo.url);\n      runInAction(() => {\n        if (this.profile && this.profile.photos) {\n          this.profile.photos.find((p) => p.isMain)!.isMain = false;\n          this.profile.photos.find((p) => p.id === photo.id)!.isMain = true;\n          this.profile.image = photo.url;\n          this.loading = false;\n        }\n      });\n    } catch (error) {\n      console.log(error);\n      runInAction(() => (this.loading = false));\n    }\n  };\n\n  deletePhoto = async (photo: Photo) => {\n    this.loading = true;\n    try {\n      await agent.Profiles.deletePhoto(photo.id);\n      runInAction(() => {\n        if (this.profile) {\n          this.profile.photos = this.profile.photos?.filter(\n            (p) => p.id != photo.id\n          );\n          this.loading = false;\n        }\n      });\n    } catch (error) {\n      console.log(error);\n      runInAction(() => (this.loading = false));\n    }\n  };\n\n  updateProfile = async (profile: Partial<Profile>) => {\n    this.loading = true;\n    try {\n      await agent.Profiles.updateProfile(profile);\n      runInAction(() => {\n        if (\n          profile.displayName &&\n          profile.displayName !== store.userStore.user?.displayName\n        ) {\n          store.userStore.setDisplayName(profile.displayName);\n        }\n        this.profile = { ...this.profile, ...(profile as Profile) };\n        this.loading = false;\n      });\n    } catch (error) {\n      console.log(error);\n      runInAction(() => (this.loading = false));\n    }\n  };\n\n  updateFollowing = async (username: string, following: boolean) => {\n    this.loading = true;\n    try {\n      await agent.Profiles.updateFollowing(username);\n      store.activityStore.updateAttendeeFollowing(username);\n      runInAction(() => {\n        if (\n          this.profile &&\n          this.profile.username !== store.userStore.user?.userName &&\n          this.profile.username === username\n        ) {\n          following\n            ? this.profile.followersCount++\n            : this.profile.followersCount--;\n          this.profile.following = following;\n        }\n        if (\n          this.profile &&\n          this.profile.username === store.userStore.user?.userName\n        ) {\n          following\n            ? this.profile.followingCount++\n            : this.profile.followingCount--;\n        }\n\n        this.followings.forEach((profile) => {\n          if (profile.username === username) {\n            profile.following\n              ? profile.followersCount--\n              : profile.followersCount++;\n            profile.following = !profile.following;\n          }\n        });\n        this.loading = false;\n      });\n    } catch (error) {\n      console.log(error);\n      runInAction(() => (this.loading = false));\n    }\n  };\n\n  loadFollowings = async (predicate: string) => {\n    this.loadingFollowings = true;\n    try {\n      var followings = await agent.Profiles.listFollowings(\n        this.profile!.username,\n        predicate\n      );\n      runInAction(() => {\n        this.followings = followings;\n        this.loadingFollowings = false;\n      });\n    } catch (error) {\n      console.log(error);\n      runInAction(() => (this.loadingFollowings = false));\n    }\n  };\n\n  loadActivities = async (username: string, predicate?: string) => {\n    this.loadingActivities = true;\n    try {\n      const activities = await agent.Profiles.listActivities(\n        username,\n        predicate!\n      );\n      runInAction(() => {\n        this.UserActivities = activities;\n        this.loadingActivities = false;\n      });\n    } catch (error) {\n      console.log(error);\n      runInAction(() => (this.loadingActivities = false));\n    }\n  };\n}\n","import { makeAutoObservable, runInAction } from \"mobx\";\nimport { useHistory } from \"react-router\";\nimport { history } from \"../..\";\nimport agent from \"../api/agent\";\nimport { User, UserFormValues } from \"../models/user\";\nimport { store } from \"./store\";\n\nexport default class UserStore {\n  user: User | null = null;\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  get isLoggedIn() {\n    return !!this.user;\n  }\n\n  login = async (creds: UserFormValues) => {\n    try {\n      const user = await agent.Account.login(creds);\n      store.commonStore.setToken(user.token);\n      runInAction(() => (this.user = user));\n      history.push(\"/activities\");\n      store.modalStore.closeModal();\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  logout = () => {\n    store.commonStore.setToken(null);\n    window.localStorage.removeItem(\"jwt\");\n    this.user = null;\n    history.push(\"/\");\n  };\n\n  getUser = async () => {\n    try {\n      const user = await agent.Account.current();\n      runInAction(() => (this.user = user));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  register = async (creds: UserFormValues) => {\n    try {\n      const user = await agent.Account.register(creds);\n      store.commonStore.setToken(user.token);\n      runInAction(() => (this.user = user));\n      history.push(\"/activities\");\n      store.modalStore.closeModal();\n    } catch (error) {\n      throw error;\n    }\n  };\n\n  setImage = (image: string) => {\n    if (this.user) this.user.image = image;\n  };\n\n  setDisplayName = (displayName: string) => {\n    if (this.user) this.user.displayName = displayName;\n  };\n}\n","import { createContext, useContext } from \"react\";\nimport ActivityStore from \"./activityStore\";\nimport CommentStore from \"./commentStore\";\nimport CommonStore from \"./commonStore\";\nimport ModalStore from \"./modalStore\";\nimport ProfileStore from \"./profileStore\";\nimport UserStore from \"./userStore\";\n\ninterface Store {\n  activityStore: ActivityStore;\n  commonStore: CommonStore;\n  userStore: UserStore;\n  modalStore: ModalStore;\n  profileStore: ProfileStore;\n  commentStore: CommentStore;\n}\n\nexport const store: Store = {\n  activityStore: new ActivityStore(),\n  commonStore: new CommonStore(),\n  userStore: new UserStore(),\n  modalStore: new ModalStore(),\n  profileStore: new ProfileStore(),\n  commentStore: new CommentStore(),\n};\n\nexport const StoreContext = createContext(store);\n\nexport function useStore() {\n  return useContext(StoreContext);\n}\n","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\nimport { ServerError } from \"../models/serverError\";\n\nexport default class CommonStore {\n  error: ServerError | null = null;\n  token: string | null = window.localStorage.getItem(\"jwt\");\n  appLoaded = false;\n\n  constructor() {\n    makeAutoObservable(this);\n\n    reaction(\n      () => this.token,\n      (token) => {\n        if (token) {\n          window.localStorage.setItem(\"jwt\", token);\n        } else {\n          window.localStorage.removeItem(\"jwt\");\n        }\n      }\n    );\n  }\n\n  setServerError = (error: ServerError) => {\n    this.error = error;\n  };\n\n  setToken = (token: string | null) => {\n    this.token = token;\n  };\n\n  setAppLoaded = () => {\n    this.appLoaded = true;\n  };\n}\n","import { makeAutoObservable } from \"mobx\";\n\ninterface Modal {\n  open: boolean;\n  body: JSX.Element | null;\n}\n\nexport default class ModalStore {\n  modal: Modal = {\n    open: false,\n    body: null,\n  };\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  openModal = (content: JSX.Element) => {\n    this.modal.open = true;\n    this.modal.body = content;\n  };\n\n  closeModal = () => {\n    this.modal.open = false;\n    this.modal.body = null;\n  };\n}\n","import {\n  HubConnection,\n  HubConnectionBuilder,\n  LogLevel,\n} from \"@microsoft/signalr\";\nimport { makeAutoObservable, runInAction } from \"mobx\";\nimport { ChatComment } from \"../models/comment\";\nimport { store } from \"./store\";\n\nexport default class CommentStore {\n  comments: ChatComment[] = [];\n  hubConnection: HubConnection | null = null;\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  createHubConnection = (activityId: string) => {\n    if (store.activityStore.selectedActivity) {\n      this.hubConnection = new HubConnectionBuilder()\n        .withUrl(process.env.REACT_APP_CHAT_URL + \"?activityId=\" + activityId, {\n          accessTokenFactory: () => store.userStore.user?.token!,\n        })\n        .withAutomaticReconnect()\n        .configureLogging(LogLevel.Information)\n        .build();\n\n      this.hubConnection\n        .start()\n        .catch((error) =>\n          console.log(\"Error establishing connection with the hub: \", error)\n        );\n\n      this.hubConnection.on(\"LoadComments\", (comments: ChatComment[]) => {\n        runInAction(() => {\n          comments.forEach((comment) => {\n            comment.createdAt = new Date(comment.createdAt + \"Z\");\n          });\n          this.comments = comments;\n        });\n      });\n\n      this.hubConnection.on(\"ReceiveComment\", (comment: ChatComment) => {\n        runInAction(() => {\n          comment.createdAt = new Date(comment.createdAt);\n          this.comments.unshift(comment);\n        });\n      });\n    }\n  };\n\n  stopHubConnection = () => {\n    this.hubConnection\n      ?.stop()\n      .catch((error) => console.log(\"Error stopping hub connection: \", error));\n  };\n\n  clearComments = () => {\n    this.comments = [];\n    this.stopHubConnection();\n  };\n\n  addComment = async (values: any) => {\n    values.activityId = store.activityStore.selectedActivity?.id;\n    try {\n      await this.hubConnection?.invoke(\"SendComment\", values);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n}\n","import { observer } from \"mobx-react-lite\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport {\n  Button,\n  Container,\n  Dropdown,\n  Image,\n  Menu,\n  MenuItem,\n} from \"semantic-ui-react\";\nimport { useStore } from \"../stores/store\";\n\nexport default observer(function NavBar() {\n  const {\n    userStore: { user, logout },\n  } = useStore();\n\n  return (\n    <Menu inverted fixed=\"top\">\n      <Container>\n        <Menu.Item as={NavLink} to=\"/\" exact header>\n          <img src=\"/assets/logo.png\" alt=\"logo\" style={{ marginRight: 10 }} />\n          Reactivities\n        </Menu.Item>\n        <Menu.Item as={NavLink} to=\"/activities\" name=\"Activities\" />\n        <Menu.Item as={NavLink} to=\"/errors\" name=\"Errors\" />\n        <Menu.Item>\n          <Button\n            as={NavLink}\n            to=\"/createActivity\"\n            positive\n            content=\"Create Activity\"\n          />\n        </Menu.Item>\n        <Menu.Item position=\"right\">\n          <Image\n            src={user?.image || \"/assets/user.png\"}\n            avatar\n            spaced=\"right\"\n          />\n          <Dropdown pointing=\"top left\" text={user?.displayName}>\n            <Dropdown.Menu>\n              <Dropdown.Item\n                text=\"My Profile\"\n                as={Link}\n                to={`/profiles/${user?.userName}`}\n                icon=\"user\"\n              />\n              <Dropdown.Item text=\"Logout\" onClick={logout} icon=\"power\" />\n            </Dropdown.Menu>\n          </Dropdown>\n        </Menu.Item>\n      </Container>\n    </Menu>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport Calendar from \"react-calendar\";\nimport { Header, Menu } from \"semantic-ui-react\";\nimport { useStore } from \"../../../app/stores/store\";\n\nexport default observer(function ActivityFilters() {\n  const {\n    activityStore: { predicate, setPredicate },\n  } = useStore();\n  return (\n    <>\n      <Menu vertical size=\"large\" style={{ width: \"100%\", marginTop: 25 }}>\n        <Header icon=\"filter\" attached color=\"teal\" content=\"Filters\" />\n        <Menu.Item\n          content=\"All activities\"\n          active={predicate.has(\"all\")}\n          onClick={() => setPredicate(\"all\", \"true\")}\n        />\n        <Menu.Item\n          content=\"I'm going\"\n          active={predicate.has(\"isGoing\")}\n          onClick={() => setPredicate(\"isGoing\", \"true\")}\n        />\n        <Menu.Item\n          content=\"I'm hosting\"\n          active={predicate.has(\"isHost\")}\n          onClick={() => setPredicate(\"isHost\", \"true\")}\n        />\n      </Menu>\n      <Header />\n      <Calendar\n        onChange={(date) => setPredicate(\"startDate\", date as Date)}\n        value={predicate.get(\"startDate\") || new Date()}\n      />\n    </>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport React, { SyntheticEvent } from \"react\";\nimport { Button, Reveal } from \"semantic-ui-react\";\nimport { Profile } from \"../../app/models/Profiles\";\nimport { useStore } from \"../../app/stores/store\";\n\ninterface Props {\n  profile: Profile;\n}\nexport default observer(function FollowButton({ profile }: Props) {\n  const { profileStore, userStore } = useStore();\n  const { updateFollowing, loading } = profileStore;\n\n  if (profile.username === userStore.user?.userName) return null;\n\n  function handleFollowing(e: SyntheticEvent, username: string) {\n    e.preventDefault();\n    profile.following\n      ? updateFollowing(username, false)\n      : updateFollowing(username, true);\n  }\n  return (\n    <Reveal animated=\"move\">\n      <Reveal.Content visible style={{ width: \"100%\" }}>\n        <Button\n          fluid\n          color=\"teal\"\n          content={profile.following ? \"Following\" : \"Not Following\"}\n        />\n      </Reveal.Content>\n      <Reveal.Content hidden style={{ width: \"100%\" }}>\n        <Button\n          fluid\n          basic\n          color={profile.following ? \"red\" : \"green\"}\n          content={profile.following ? \"Unfollow\" : \"Follow\"}\n          onClick={(e) => handleFollowing(e, profile.username)}\n          loading={loading}\n        />\n      </Reveal.Content>\n    </Reveal>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Icon, Image } from \"semantic-ui-react\";\nimport { Profile } from \"../../app/models/Profiles\";\nimport FollowButton from \"./FollowButton\";\n\ninterface Props {\n  profile: Profile;\n}\n\nexport default observer(function ProfileCard({ profile }: Props) {\n  function truncate(str: string | undefined) {\n    if (str) {\n      return str.length > 40 ? str.substring(0, 37) + \"...\" : str;\n    }\n  }\n  return (\n    <Card as={Link} to={`/profiles/${profile.username}`}>\n      <Image src={profile.image || \"assets/user.png\"} />\n      <Card.Content>\n        <Card.Header content={profile.displayName} />\n        <Card.Description content={truncate(profile.bio)} />\n      </Card.Content>\n      <Card.Content extra>\n        <Icon name=\"user\" />\n        {profile.followersCount} Followers\n      </Card.Content>\n      <FollowButton profile={profile} />\n    </Card>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Image, List, Popup } from \"semantic-ui-react\";\nimport { Profile } from \"../../../app/models/Profiles\";\nimport ProfileCard from \"../../profiles/ProfileCard\";\n\ninterface Props {\n  attendees: Profile[];\n}\n\nexport default observer(function ActivityListItemAttendees({\n  attendees,\n}: Props) {\n  const styles = {\n    borderColor: \"orange\",\n    borderWidth: 2,\n  };\n\n  return (\n    <List horizontal>\n      {attendees.map((attendee) => (\n        <Popup\n          hoverable\n          key={attendee.username}\n          trigger={\n            <List.Item\n              key={attendee.username}\n              as={Link}\n              to={`/profiles/${attendee.username}`}\n            >\n              <Image\n                bordered\n                style={attendee.following ? styles : null}\n                circular\n                size=\"mini\"\n                src={attendee.image || \"assets/user.png\"}\n              />\n            </List.Item>\n          }\n        >\n          <Popup.Content>\n            <ProfileCard profile={attendee} />\n          </Popup.Content>\n        </Popup>\n      ))}\n    </List>\n  );\n});\n","import { format } from \"date-fns\";\nimport { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Button,\n  Icon,\n  Item,\n  ItemDescription,\n  Label,\n  Segment,\n} from \"semantic-ui-react\";\nimport { Activity } from \"../../../app/models/Activity\";\nimport ActivityListItemAttendees from \"./ActivityListItemAttendees\";\n\ninterface Props {\n  activity: Activity;\n}\n\nexport default observer(function ActivityListItem({ activity }: Props) {\n  return (\n    <Segment.Group>\n      <Segment>\n        {activity.isCancelled && (\n          <Label\n            color=\"red\"\n            attached=\"top\"\n            style={{ textAlign: \"center\" }}\n            content=\"Cancelled\"\n          />\n        )}\n        <Item.Group>\n          <Item>\n            <Item.Image\n              circular\n              style={{ marginBottom: 3 }}\n              size=\"tiny\"\n              src={activity.host?.image || \"/assets/user.png\"}\n            />\n            <Item.Content>\n              <Item.Header as={Link} to={`/activities/${activity.id}`}>\n                {activity.title}\n              </Item.Header>\n              <Item.Description>\n                Hosted By{\" \"}\n                <Link to={`/profiles/${activity.hostUsername}`}>\n                  {activity.host?.displayName}\n                </Link>\n              </Item.Description>\n              {activity.isHost && (\n                <ItemDescription>\n                  <Label basic color=\"orange\">\n                    {\" \"}\n                    You are hosting this Activity{\" \"}\n                  </Label>\n                </ItemDescription>\n              )}\n              {activity.isGoing && !activity.isHost && (\n                <ItemDescription>\n                  <Label basic color=\"green\">\n                    {\" \"}\n                    You are going to this Activity{\" \"}\n                  </Label>\n                </ItemDescription>\n              )}\n            </Item.Content>\n          </Item>\n        </Item.Group>\n      </Segment>\n      <Segment>\n        <span>\n          <Icon name=\"clock\" />\n          {format(activity.date!, \"dd MMM yyyy h:mm aa\")}\n          <Icon name=\"marker\" />\n          {activity.venue}\n        </span>\n      </Segment>\n      <Segment secondary>\n        <ActivityListItemAttendees attendees={activity.attendees!} />\n      </Segment>\n      <Segment clearing>\n        <span>{activity.description}</span>\n        <Button\n          as={Link}\n          to={`/activities/${activity.id}`}\n          content=\"View\"\n          color=\"teal\"\n          floated=\"right\"\n        />\n      </Segment>\n    </Segment.Group>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport { Fragment } from \"react\";\nimport { Header, Item, Segment } from \"semantic-ui-react\";\nimport { useStore } from \"../../../app/stores/store\";\nimport ActivityListItem from \"./ActivityListItem\";\n\nexport default observer(function ActivityList() {\n  const { activityStore } = useStore();\n  const { groupedActivities } = activityStore;\n\n  return (\n    <>\n      {groupedActivities.map(([group, activities]) => (\n        <Fragment key={group}>\n          <Header sub color=\"teal\">\n            {group}\n          </Header>\n          {activities.map((activity) => (\n            <ActivityListItem key={activity.id} activity={activity} />\n          ))}\n        </Fragment>\n      ))}\n    </>\n  );\n});\n","import React, { Fragment } from \"react\";\nimport { Segment, Button, Placeholder } from \"semantic-ui-react\";\n\nexport default function ActivityListItemPlaceholder() {\n  return (\n    <Fragment>\n      <Placeholder fluid style={{ marginTop: 25 }}>\n        <Segment.Group>\n          <Segment style={{ minHeight: 110 }}>\n            <Placeholder>\n              <Placeholder.Header image>\n                <Placeholder.Line />\n                <Placeholder.Line />\n              </Placeholder.Header>\n              <Placeholder.Paragraph>\n                <Placeholder.Line />\n              </Placeholder.Paragraph>\n            </Placeholder>\n          </Segment>\n          <Segment>\n            <Placeholder>\n              <Placeholder.Line />\n              <Placeholder.Line />\n            </Placeholder>\n          </Segment>\n          <Segment secondary style={{ minHeight: 70 }} />\n          <Segment clearing>\n            <Button disabled color=\"blue\" floated=\"right\" content=\"View\" />\n          </Segment>\n        </Segment.Group>\n      </Placeholder>\n    </Fragment>\n  );\n}\n","import { observer } from \"mobx-react-lite\";\nimport React, { useEffect, useState } from \"react\";\nimport InfiniteScroll from \"react-infinite-scroller\";\nimport { Button, Grid, List, Loader } from \"semantic-ui-react\";\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\nimport { PagingParams } from \"../../../app/models/Pagination\";\nimport { useStore } from \"../../../app/stores/store\";\nimport ActivityFilters from \"./ActivityFilters\";\nimport ActivityList from \"./ActivityList\";\nimport ActivityListItemPlaceholder from \"./ActivityListItemPlaceholder\";\n\nexport default observer(function ActivityDashboard() {\n  const { activityStore } = useStore();\n  const {\n    loadActivities,\n    activityRegistry,\n    setPagingParams,\n    pagination,\n  } = activityStore;\n\n  const [loadingNext, setLoadingNext] = useState(false);\n\n  function handleNextLoad() {\n    setLoadingNext(true);\n    setPagingParams(\n      new PagingParams((pagination!.currentPage = pagination!.currentPage + 1))\n    );\n    loadActivities().then(() => setLoadingNext(false));\n  }\n\n  useEffect(() => {\n    if (activityRegistry.size <= 1) loadActivities();\n  }, [activityStore]);\n\n  return (\n    <Grid>\n      <Grid.Column width=\"10\">\n        <List>\n          {activityStore.loadingInitial && !loadingNext ? (\n            <>\n              <ActivityListItemPlaceholder />\n              <ActivityListItemPlaceholder />\n            </>\n          ) : (\n            <InfiniteScroll\n              pageStart={0}\n              loadMore={handleNextLoad}\n              hasMore={\n                !loadingNext &&\n                !!pagination &&\n                pagination.currentPage < pagination.totalPages\n              }\n              initialLoad={false}\n            >\n              <ActivityList />\n            </InfiniteScroll>\n          )}\n        </List>\n      </Grid.Column>\n      <Grid.Column width=\"6\">\n        <ActivityFilters />\n      </Grid.Column>\n      <Grid.Column width={10}>\n        <Loader active={loadingNext} />\n      </Grid.Column>\n    </Grid>\n  );\n});\n","import { useField } from \"formik\";\nimport { Form, Label } from \"semantic-ui-react\";\n\ninterface Props {\n  placeholder: string;\n  name: string;\n  type?: string;\n  label?: string;\n}\n\nexport default function MyTextInput(props: Props) {\n  const [field, meta] = useField(props);\n  return (\n    <Form.Field error={meta.touched && !!meta.error}>\n      <label>{props.label}</label>\n      <input {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <Label basic color=\"red\">\n          {\" \"}\n          {meta.error}{\" \"}\n        </Label>\n      ) : null}\n    </Form.Field>\n  );\n}\n","import { ErrorMessage, Form, Formik } from \"formik\";\nimport { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Button, Header, Label } from \"semantic-ui-react\";\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\nimport { useStore } from \"../../app/stores/store\";\n\nexport default observer(function LoginForm() {\n  const { userStore } = useStore();\n\n  return (\n    <Formik\n      initialValues={{ email: \"\", password: \"\", error: null }}\n      onSubmit={(values, { setErrors }) =>\n        userStore\n          .login(values)\n          .catch((error) => setErrors({ error: \"Invalid email or password\" }))\n      }\n    >\n      {({ handleSubmit, isSubmitting, errors }) => (\n        <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\n          <Header\n            content=\"Login to Reactivities\"\n            textAlign=\"center\"\n            color=\"teal\"\n          />\n          <MyTextInput name=\"email\" placeholder=\"Email\" />\n          <MyTextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\n          <ErrorMessage\n            name=\"error\"\n            render={() => (\n              <Label\n                style={{ marginBottom: 10 }}\n                basic\n                color=\"red\"\n                content={errors.error}\n              />\n            )}\n          />\n          <Button\n            loading={isSubmitting}\n            positive\n            content=\"Login\"\n            type=\"submit\"\n            fluid\n          />\n        </Form>\n      )}\n    </Formik>\n  );\n});\n","import React from \"react\";\nimport { Message } from \"semantic-ui-react\";\n\ninterface Props {\n  errors: any;\n}\n\nexport default function ValidationErrors({ errors }: Props) {\n  return (\n    <Message error>\n      {errors && (\n        <Message.List>\n          {errors.map((err: any, i: any) => (\n            <Message.Item key={i}>{err}</Message.Item>\n          ))}\n        </Message.List>\n      )}\n    </Message>\n  );\n}\n","import { ErrorMessage, Form, Formik } from \"formik\";\nimport { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Button, Header, Label } from \"semantic-ui-react\";\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\nimport { useStore } from \"../../app/stores/store\";\nimport ValidationErrors from \"../errors/ValidationErrors\";\nimport * as Yup from \"yup\";\n\nexport default observer(function RegisterForm() {\n  const { userStore } = useStore();\n\n  return (\n    <Formik\n      initialValues={{\n        displayName: \"\",\n        username: \"\",\n        email: \"\",\n        password: \"\",\n        error: null,\n      }}\n      onSubmit={(values, { setErrors }) =>\n        userStore.register(values).catch((error) => setErrors({ error }))\n      }\n      validationSchema={Yup.object({\n        displayName: Yup.string().required(),\n        username: Yup.string().required(),\n        email: Yup.string().required().email(),\n        password: Yup.string().required(),\n      })}\n    >\n      {({ handleSubmit, isSubmitting, errors, isValid, dirty }) => (\n        <Form\n          className=\"ui form error\"\n          onSubmit={handleSubmit}\n          autoComplete=\"off\"\n        >\n          <Header\n            content=\"Register for Reactivities\"\n            textAlign=\"center\"\n            color=\"teal\"\n          />\n          <MyTextInput name=\"displayName\" placeholder=\"Display Name\" />\n          <MyTextInput name=\"username\" placeholder=\"Username\" />\n          <MyTextInput name=\"email\" placeholder=\"Email\" />\n          <MyTextInput name=\"password\" placeholder=\"Password\" type=\"password\" />\n          <ErrorMessage\n            name=\"error\"\n            render={() => <ValidationErrors errors={errors.error} />}\n          />\n          <Button\n            disabled={!isValid || !dirty || isSubmitting}\n            loading={isSubmitting}\n            positive\n            content=\"Register\"\n            type=\"submit\"\n            fluid\n          />\n        </Form>\n      )}\n    </Formik>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Container, Header, Image, Segment } from \"semantic-ui-react\";\nimport { useStore } from \"../../app/stores/store\";\nimport LoginForm from \"../users/LoginForm\";\nimport RegisterForm from \"../users/RegisterForm\";\n\nexport default observer(function HomePage() {\n  const { userStore, modalStore } = useStore();\n  return (\n    <Segment inverted textAlign=\"center\" vertical className=\"masthead\">\n      <Container text>\n        <Header as=\"h1\" inverted>\n          <Image\n            src=\"/assets/logo.png\"\n            size=\"massive\"\n            alt=\"logo\"\n            style={{ marginBottom: 12 }}\n          />\n          Reactivities\n        </Header>\n        {userStore.isLoggedIn ? (\n          <>\n            <Header as=\"h2\" inverted content=\"Welcome to Reactivities\" />\n            <Button as={Link} to=\"/activities\" size=\"huge\" inverted>\n              Go to Reactivities\n            </Button>\n          </>\n        ) : (\n          <>\n            <Button\n              onClick={() => modalStore.openModal(<LoginForm />)}\n              size=\"huge\"\n              inverted\n            >\n              Login!\n            </Button>\n            <Button\n              onClick={() => modalStore.openModal(<RegisterForm />)}\n              size=\"huge\"\n              inverted\n            >\n              Register!\n            </Button>\n          </>\n        )}\n      </Container>\n    </Segment>\n  );\n});\n","import React from \"react\";\nimport { Dimmer, Loader } from \"semantic-ui-react\";\n\ninterface Props {\n  inverted?: boolean;\n  content?: string;\n}\n\nexport default function LoadingComponent({\n  inverted = true,\n  content = \"Loading...\",\n}: Props) {\n  return (\n    <Dimmer active={true} inverted={inverted}>\n      <Loader content={content} />\n    </Dimmer>\n  );\n}\n","import { useField } from \"formik\";\nimport { Form, Label, TextArea } from \"semantic-ui-react\";\n\ninterface Props {\n  placeholder: string;\n  name: string;\n  rows: number;\n  label?: string;\n}\n\nexport default function MyTextArea(props: Props) {\n  const [field, meta] = useField(props);\n  return (\n    <Form.Field error={meta.touched && !!meta.error}>\n      <label>{props.label}</label>\n      <TextArea {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <Label basic color=\"red\">\n          {\" \"}\n          {meta.error}{\" \"}\n        </Label>\n      ) : null}\n    </Form.Field>\n  );\n}\n","import { useField } from \"formik\";\nimport { Form, Label, Select, TextArea } from \"semantic-ui-react\";\n\ninterface Props {\n  placeholder: string;\n  name: string;\n  options: any;\n  label?: string;\n}\n\nexport default function MySelectInput(props: Props) {\n  const [field, meta, helpers] = useField(props);\n  return (\n    <Form.Field error={meta.touched && !!meta.error}>\n      <label>{props.label}</label>\n      <Select\n        clearable\n        options={props.options}\n        value={field.value || null}\n        onChange={(e, d) => helpers.setValue(d.value)}\n        onBlur={() => helpers.setTouched(true)}\n        placeholder={props.placeholder}\n      />\n      {meta.touched && meta.error ? (\n        <Label basic color=\"red\">\n          {\" \"}\n          {meta.error}{\" \"}\n        </Label>\n      ) : null}\n    </Form.Field>\n  );\n}\n","export const categoryOptions = [\n  { text: \"Drinks\", value: \"drinks\" },\n  { text: \"Culture\", value: \"culture\" },\n  { text: \"Film\", value: \"film\" },\n  { text: \"Food\", value: \"food\" },\n  { text: \"Music\", value: \"music\" },\n  { text: \"Travel\", value: \"travel\" },\n];\n","import { useField } from \"formik\";\nimport { Form, Label } from \"semantic-ui-react\";\nimport DatePicker, { ReactDatePickerProps } from \"react-datepicker\";\n\nexport default function MyDateInput(props: Partial<ReactDatePickerProps>) {\n  const [field, meta, helpers] = useField(props.name!);\n  return (\n    <Form.Field error={meta.touched && !!meta.error}>\n      <DatePicker\n        {...field}\n        {...props}\n        selected={(field.value && new Date(field.value)) || null}\n        onChange={(value) => helpers.setValue(value)}\n      />\n      {meta.touched && meta.error ? (\n        <Label basic color=\"red\">\n          {\" \"}\n          {meta.error}{\" \"}\n        </Label>\n      ) : null}\n    </Form.Field>\n  );\n}\n","import { observer } from \"mobx-react-lite\";\nimport { useEffect, useState } from \"react\";\nimport { useHistory, useParams } from \"react-router\";\nimport { Button, Header, Segment } from \"semantic-ui-react\";\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\nimport { useStore } from \"../../../app/stores/store\";\nimport { ActivityFormValues } from \"../../../app/models/Activity\";\nimport { v4 as uuid } from \"uuid\";\nimport { Link } from \"react-router-dom\";\nimport { Formik, Form } from \"formik\";\nimport MyTextInput from \"../../../app/common/form/MyTextInput\";\nimport * as Yup from \"yup\";\nimport MyTextArea from \"../../../app/common/form/MyTextArea\";\nimport MySelectInput from \"../../../app/common/form/MySelectInput\";\nimport { categoryOptions } from \"../../../app/common/options/categoryOptions\";\nimport MyDateInput from \"../../../app/common/form/MyDateInput\";\n\nexport default observer(function ActivityForm() {\n  const { activityStore } = useStore();\n  const {\n    createActivity,\n    updateActivity,\n    loading,\n    loadActivity,\n    loadingInitial,\n  } = activityStore;\n\n  const { id } = useParams<{ id: string }>();\n  const history = useHistory();\n  const [activity, setActivity] = useState<ActivityFormValues>(\n    new ActivityFormValues()\n  );\n\n  const validationSchema = Yup.object({\n    title: Yup.string().required(\"The title is required\"),\n    description: Yup.string().required(\"The description is required\"),\n    date: Yup.string().required().nullable(),\n    venue: Yup.string().required(),\n    category: Yup.string().required(),\n    city: Yup.string().required(),\n  });\n\n  useEffect(() => {\n    if (id) {\n      loadActivity(id).then((activity) =>\n        setActivity(new ActivityFormValues(activity))\n      );\n    }\n  }, [id, loadActivity]);\n\n  function handleFormSubmit(activity: ActivityFormValues) {\n    if (!activity.id) {\n      let newActivity = {\n        ...activity,\n        id: uuid(),\n      };\n      createActivity(newActivity).then(() =>\n        history.push(`/activities/${newActivity.id}`)\n      );\n    } else {\n      updateActivity(activity).then(() =>\n        history.push(`/activities/${activity.id}`)\n      );\n    }\n  }\n\n  if (loadingInitial) return <LoadingComponent content=\"Loading Activity...\" />;\n\n  return (\n    <Segment clearing>\n      <Header content=\"Activity Details\" sub color=\"teal\" />\n      <Formik\n        validationSchema={validationSchema}\n        enableReinitialize\n        initialValues={activity}\n        onSubmit={(values) => handleFormSubmit(values)}\n      >\n        {({ handleSubmit, isSubmitting, isValid, dirty }) => (\n          <Form className=\"ui form\" onSubmit={handleSubmit} autoComplete=\"off\">\n            <MyTextInput placeholder=\"Title\" name=\"title\" />\n            <MyTextArea rows={3} placeholder=\"Description\" name=\"description\" />\n            <MyDateInput\n              placeholderText=\"Date\"\n              name=\"date\"\n              showTimeSelect\n              timeCaption=\"Time\"\n              dateFormat=\"MMMM d, yyyy h:mm aa\"\n            />\n            <MySelectInput\n              options={categoryOptions}\n              placeholder=\"Category\"\n              name=\"category\"\n            />\n            <Header content=\"Location Details\" sub color=\"teal\" />\n            <MyTextInput placeholder=\"Venue\" name=\"venue\" />\n            <MyTextInput placeholder=\"City\" name=\"city\" />\n\n            <Button\n              disabled={isSubmitting || !isValid || !dirty}\n              loading={isSubmitting}\n              floated=\"right\"\n              positive\n              type=\"submit\"\n              content=\"Submit\"\n            />\n            <Button\n              floated=\"right\"\n              type=\"button\"\n              content=\"Cancel\"\n              as={Link}\n              to={\"/activities\"}\n            />\n          </Form>\n        )}\n      </Formik>\n    </Segment>\n  );\n});\n","import { Formik, Form, Field, FieldProps } from \"formik\";\nimport { observer } from \"mobx-react-lite\";\nimport React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Segment, Header, Comment, Button, Loader } from \"semantic-ui-react\";\nimport MyTextArea from \"../../../app/common/form/MyTextArea\";\nimport { useStore } from \"../../../app/stores/store\";\nimport * as Yup from \"yup\";\nimport { formatDistance } from \"date-fns/esm\";\nimport { formatDistanceToNow } from \"date-fns\";\n\ninterface Props {\n  activityId: string;\n}\n\nexport default observer(function ActivityDetailedChat({ activityId }: Props) {\n  const { commentStore } = useStore();\n\n  useEffect(() => {\n    if (activityId) {\n      commentStore.createHubConnection(activityId);\n    }\n    return () => {\n      commentStore.clearComments();\n    };\n  }, [commentStore, activityId]);\n\n  return (\n    <>\n      <Segment\n        textAlign=\"center\"\n        attached=\"top\"\n        inverted\n        color=\"teal\"\n        style={{ border: \"none\" }}\n      >\n        <Header>Chat about this event</Header>\n      </Segment>\n      <Segment attached clearing>\n        <Formik\n          initialValues={{ body: \"\" }}\n          onSubmit={(values, { resetForm }) =>\n            commentStore.addComment(values).then(() => resetForm())\n          }\n          validationSchema={Yup.object({\n            body: Yup.string().required(),\n          })}\n        >\n          {({ isSubmitting, isValid, handleSubmit }) => (\n            <Form className=\"ui form\">\n              <Field name=\"body\">\n                {(props: FieldProps) => (\n                  <div style={{ position: \"relative\" }}>\n                    <Loader active={isSubmitting} />\n                    <textarea\n                      placeholder=\"Enter your comment (Enter to submit, SHIFT + enter for new line)\"\n                      rows={2}\n                      {...props.field}\n                      onKeyPress={(e) => {\n                        if (e.key == \"Enter\" && e.shiftKey) {\n                          return;\n                        }\n                        if (e.key == \"Enter\" && !e.shiftKey) {\n                          e.preventDefault();\n                          isValid && handleSubmit();\n                        }\n                      }}\n                    />\n                  </div>\n                )}\n              </Field>\n            </Form>\n          )}\n        </Formik>\n        <Comment.Group>\n          {commentStore.comments.map((comment) => (\n            <Comment key={comment.id}>\n              <Comment.Avatar src={comment.image || \"/assets/user.png\"} />\n              <Comment.Content>\n                <Comment.Author as={Link} to={`/profiles/${comment.username}`}>\n                  {comment.displayName}\n                </Comment.Author>\n                <Comment.Metadata>\n                  <div>{formatDistanceToNow(comment.createdAt)} ago</div>\n                </Comment.Metadata>\n                <Comment.Text style={{ whiteSpace: \"pre-wrap\" }}>\n                  {comment.body}\n                </Comment.Text>\n              </Comment.Content>\n            </Comment>\n          ))}\n        </Comment.Group>\n      </Segment>\n    </>\n  );\n});\n","import { format } from \"date-fns\";\nimport { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Header, Item, Segment, Image, Label } from \"semantic-ui-react\";\nimport { Activity } from \"../../../app/models/Activity\";\nimport { useStore } from \"../../../app/stores/store\";\n\nconst activityImageStyle = {\n  filter: \"brightness(30%)\",\n};\n\nconst activityImageTextStyle = {\n  position: \"absolute\",\n  bottom: \"5%\",\n  left: \"5%\",\n  width: \"100%\",\n  height: \"auto\",\n  color: \"white\",\n};\n\ninterface Props {\n  activity: Activity;\n}\n\nexport default observer(function ActivityDetailedHeader({ activity }: Props) {\n  const {\n    activityStore: { updateAttendance, loading, cancelActivityToggle },\n  } = useStore();\n\n  return (\n    <Segment.Group>\n      <Segment basic attached=\"top\" style={{ padding: \"0\" }}>\n        {activity.isCancelled && (\n          <Label\n            style={{ position: \"absolute\", zIndex: 1000, left: -14, top: 20 }}\n            color=\"red\"\n            ribbon\n            content=\"Cancelled\"\n          ></Label>\n        )}\n        <Image\n          src={`/assets/categoryImages/${activity.category}.jpg`}\n          fluid\n          style={activityImageStyle}\n        />\n        <Segment style={activityImageTextStyle} basic>\n          <Item.Group>\n            <Item>\n              <Item.Content>\n                <Header\n                  size=\"huge\"\n                  content={activity.title}\n                  style={{ color: \"white\" }}\n                />\n                <p>{format(activity.date!, \"dd MMM yyyy h:mm aa\")}</p>\n                <p>\n                  Hosted by{\" \"}\n                  <strong>\n                    {\" \"}\n                    <Link to={`/profiles/${activity.host?.username}`}>\n                      {activity.host?.displayName}{\" \"}\n                    </Link>\n                  </strong>\n                </p>\n              </Item.Content>\n            </Item>\n          </Item.Group>\n        </Segment>\n      </Segment>\n      <Segment clearing attached=\"bottom\">\n        {activity.isHost ? (\n          <>\n            <Button\n              basic\n              loading={loading}\n              content={\n                activity.isCancelled ? \"Reactivate activity\" : \"Cancel Activity\"\n              }\n              floated=\"left\"\n              onClick={cancelActivityToggle}\n              color={activity.isCancelled ? \"green\" : \"red\"}\n            />\n            <Button\n              disabled={activity.isCancelled}\n              as={Link}\n              to={`/manage/${activity.id}`}\n              color=\"orange\"\n              floated=\"right\"\n            >\n              Manage Event\n            </Button>\n          </>\n        ) : activity.isGoing ? (\n          <Button loading={loading} onClick={updateAttendance}>\n            Cancel attendance\n          </Button>\n        ) : (\n          <Button\n            disabled={activity.isCancelled}\n            loading={loading}\n            onClick={updateAttendance}\n            color=\"teal\"\n          >\n            Join Activity\n          </Button>\n        )}\n      </Segment>\n    </Segment.Group>\n  );\n});\n","import { format } from \"date-fns\";\nimport { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Segment, Grid, Icon } from \"semantic-ui-react\";\nimport { Activity } from \"../../../app/models/Activity\";\n\ninterface Props {\n  activity: Activity;\n}\n\nexport default observer(function ActivityDetailedInfo({ activity }: Props) {\n  return (\n    <Segment.Group>\n      <Segment attached=\"top\">\n        <Grid>\n          <Grid.Column width={1}>\n            <Icon size=\"large\" color=\"teal\" name=\"info\" />\n          </Grid.Column>\n          <Grid.Column width={15}>\n            <p>{activity.description}</p>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n      <Segment attached>\n        <Grid verticalAlign=\"middle\">\n          <Grid.Column width={1}>\n            <Icon name=\"calendar\" size=\"large\" color=\"teal\" />\n          </Grid.Column>\n          <Grid.Column width={15}>\n            <span>{format(activity.date!, \"dd MMM yyyy h:mm aa\")}</span>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n      <Segment attached>\n        <Grid verticalAlign=\"middle\">\n          <Grid.Column width={1}>\n            <Icon name=\"marker\" size=\"large\" color=\"teal\" />\n          </Grid.Column>\n          <Grid.Column width={11}>\n            <span>\n              {activity.venue}, {activity.city}\n            </span>\n          </Grid.Column>\n        </Grid>\n      </Segment>\n    </Segment.Group>\n  );\n});\n","import React from \"react\";\nimport { Segment, List, Label, Item, Image } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { observer } from \"mobx-react-lite\";\nimport { Profile } from \"../../../app/models/Profiles\";\nimport { Activity } from \"../../../app/models/Activity\";\n\ninterface Props {\n  activity: Activity;\n}\n\nexport default observer(function ActivityDetailedSidebar({\n  activity: { attendees, host },\n}: Props) {\n  if (!attendees) return null;\n  return (\n    <>\n      <Segment\n        textAlign=\"center\"\n        style={{ border: \"none\" }}\n        attached=\"top\"\n        secondary\n        inverted\n        color=\"teal\"\n      >\n        {attendees.length} {attendees.length === 1 ? \"Person\" : \"People\"} Going\n      </Segment>\n      <Segment attached>\n        <List relaxed divided>\n          {attendees.map((attendee) => (\n            <Item style={{ position: \"relative\" }} key={attendee.username}>\n              {attendee.username === host?.username && (\n                <Label\n                  style={{ position: \"absolute\" }}\n                  color=\"orange\"\n                  ribbon=\"right\"\n                >\n                  Host\n                </Label>\n              )}\n\n              <Image size=\"tiny\" src={attendee.image || \"/assets/user.png\"} />\n              <Item.Content verticalAlign=\"middle\">\n                <Item.Header as=\"h3\">\n                  <Link to={`/profiles/${attendee.username}`}>\n                    {attendee.displayName}\n                  </Link>\n                </Item.Header>\n                {attendee.following && (\n                  <Item.Extra style={{ color: \"orange\" }}>Following</Item.Extra>\n                )}\n              </Item.Content>\n            </Item>\n          ))}\n        </List>\n      </Segment>\n    </>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport { useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Grid } from \"semantic-ui-react\";\nimport LoadingComponent from \"../../../app/layout/LoadingComponent\";\nimport { useStore } from \"../../../app/stores/store\";\nimport ActivityDetailedChat from \"./ActivityDetailedChat\";\nimport ActivityDetailedHeader from \"./ActivityDetailedHeader\";\nimport ActivityDetailedInfo from \"./ActivityDetailedInfo\";\nimport ActivityDetailedSideBar from \"./ActivityDetailedSideBar\";\n\nexport default observer(function ActivityDetail() {\n  const { activityStore } = useStore();\n  const {\n    selectedActivity: activity,\n    loadActivity,\n    loadingInitial,\n    clearSelectedActivity,\n  } = activityStore;\n\n  const { id } = useParams<{ id: string }>();\n\n  useEffect(() => {\n    if (id) loadActivity(id);\n    return () => clearSelectedActivity();\n  }, [id, loadActivity, clearSelectedActivity]);\n\n  if (loadingInitial || !activity) return <LoadingComponent />;\n\n  return (\n    <Grid>\n      <Grid.Column width={10}>\n        <ActivityDetailedHeader activity={activity} />\n        <ActivityDetailedInfo activity={activity} />\n        <ActivityDetailedChat activityId={activity.id} />\n      </Grid.Column>\n      <Grid.Column width={6}>\n        <ActivityDetailedSideBar activity={activity} />\n      </Grid.Column>\n    </Grid>\n  );\n});\n","import React, { useState } from \"react\";\nimport { Button, Header, Segment } from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport ValidationErrors from \"./ValidationErrors\";\n\nexport default function TestErrors() {\n  const baseUrl = process.env.REACT_APP_API_URL;\n\n  const [errors, setErrors] = useState(null);\n\n  function handleNotFound() {\n    axios\n      .get(baseUrl + \"buggy/not-found\")\n      .catch((err) => console.log(err.response));\n  }\n\n  function handleBadRequest() {\n    axios\n      .get(baseUrl + \"buggy/bad-request\")\n      .catch((err) => console.log(err.response));\n  }\n\n  function handleServerError() {\n    axios\n      .get(baseUrl + \"buggy/server-error\")\n      .catch((err) => console.log(err.response));\n  }\n\n  function handleUnauthorised() {\n    axios\n      .get(baseUrl + \"buggy/unauthorised\")\n      .catch((err) => console.log(err.response));\n  }\n\n  function handleBadGuid() {\n    axios.get(baseUrl + \"activities/notaguid\").catch((err) => console.log(err));\n  }\n\n  function handleValidationError() {\n    axios.post(baseUrl + \"activities\", {}).catch((err) => setErrors(err));\n  }\n\n  return (\n    <>\n      <Header as=\"h1\" content=\"Test Error component\" />\n      <Segment>\n        <Button.Group widths=\"7\">\n          <Button onClick={handleNotFound} content=\"Not Found\" basic primary />\n          <Button\n            onClick={handleBadRequest}\n            content=\"Bad Request\"\n            basic\n            primary\n          />\n          <Button\n            onClick={handleValidationError}\n            content=\"Validation Error\"\n            basic\n            primary\n          />\n          <Button\n            onClick={handleServerError}\n            content=\"Server Error\"\n            basic\n            primary\n          />\n          <Button\n            onClick={handleUnauthorised}\n            content=\"Unauthorised\"\n            basic\n            primary\n          />\n          <Button onClick={handleBadGuid} content=\"Bad Guid\" basic primary />\n        </Button.Group>\n      </Segment>\n      {errors && <ValidationErrors errors={errors} />}\n    </>\n  );\n}\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button, Header, Icon, Segment } from \"semantic-ui-react\";\n\nexport default function NotFound() {\n  return (\n    <Segment placeholder>\n      <Header icon>\n        <Icon name=\"search\" />\n        Oops - Nothing found anywhere.\n      </Header>\n      <Segment.Inline>\n        <Button as={Link} to=\"/activities\" primary>\n          Return to activities\n        </Button>\n      </Segment.Inline>\n    </Segment>\n  );\n}\n","import { observer } from \"mobx-react-lite\";\nimport { Container, Header, Segment } from \"semantic-ui-react\";\nimport { useStore } from \"../../app/stores/store\";\n\nexport default observer(function ServerError() {\n  const { commonStore } = useStore();\n  return (\n    <Container>\n      <Header as=\"h1\" content=\"Server Error\" />\n      <Header sub as=\"h5\" content={commonStore.error?.message} color=\"red\" />\n      {commonStore.error?.details && (\n        <Segment>\n          <Header as=\"h4\" content=\"Stack-trace\" color=\"teal\" />\n          <code>{commonStore.error?.details}</code>\n        </Segment>\n      )}\n    </Container>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport { Modal } from \"semantic-ui-react\";\nimport { useStore } from \"../../stores/store\";\n\nexport default observer(function ModalContainer() {\n  const { modalStore } = useStore();\n\n  return (\n    <Modal\n      open={modalStore.modal.open}\n      onClose={modalStore.closeModal}\n      size=\"mini\"\n    >\n      <Modal.Content>{modalStore.modal.body}</Modal.Content>\n    </Modal>\n  );\n});\n","import { Form, Formik } from \"formik\";\nimport { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { Button } from \"semantic-ui-react\";\nimport * as Yup from \"yup\";\nimport MyTextArea from \"../../app/common/form/MyTextArea\";\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\nimport { useStore } from \"../../app/stores/store\";\n\ninterface Props {\n  setEditMode: (editMode: boolean) => void;\n}\n\nexport default observer(function ProfileEditForm({ setEditMode }: Props) {\n  const {\n    profileStore: { updateProfile, profile },\n  } = useStore();\n\n  return (\n    <Formik\n      initialValues={{ displayName: profile?.displayName, bio: profile?.bio }}\n      onSubmit={(values) =>\n        updateProfile(values).then(() => setEditMode(false))\n      }\n      validationSchema={Yup.object({\n        displayName: Yup.string().required(),\n      })}\n    >\n      {({ isSubmitting, isValid, dirty }) => (\n        <Form className=\"ui form\">\n          <MyTextInput placeholder=\"DisplayName\" name=\"displayName\" />\n          <MyTextArea placeholder=\"Add your Bio\" name=\"bio\" rows={5} />\n          <Button\n            loading={isSubmitting}\n            disabled={!isValid || !dirty}\n            positive\n            type=\"submit\"\n            content=\"Update profile\"\n            floated=\"right\"\n          />\n        </Form>\n      )}\n    </Formik>\n  );\n});\n","import { getQueriesForElement } from \"@testing-library/dom\";\nimport { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { Button, Grid, Header, Tab } from \"semantic-ui-react\";\nimport { Profile } from \"../../app/models/Profiles\";\nimport { useStore } from \"../../app/stores/store\";\nimport ProfileEditForm from \"./ProfileEditForm\";\n\nexport default observer(function ProfileAbout() {\n  const { profileStore } = useStore();\n  const { isCurrentUser, profile } = profileStore;\n  const [editMode, setEditMode] = useState(false);\n\n  return (\n    <Tab.Pane>\n      <Grid>\n        <Grid.Column width={16}>\n          <Header floated=\"left\" icon=\"user\" content={profile?.displayName} />\n          {isCurrentUser && (\n            <Button\n              basic\n              floated=\"right\"\n              content={editMode ? \"Cancel\" : \"Edit profile\"}\n              onClick={() => setEditMode(!editMode)}\n            />\n          )}\n        </Grid.Column>\n        <Grid.Column width={16}>\n          {editMode ? (\n            <ProfileEditForm setEditMode={setEditMode} />\n          ) : (\n            <span style={{ whiteSpace: \"pre-wrap\" }}>{profile?.bio}</span>\n          )}\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  );\n});\n","import React, { SyntheticEvent, useEffect } from \"react\";\nimport { observer } from \"mobx-react-lite\";\nimport { Tab, Grid, Header, Card, Image, TabProps } from \"semantic-ui-react\";\nimport { Link } from \"react-router-dom\";\nimport { format } from \"date-fns\";\nimport { useStore } from \"../../app/stores/store\";\nimport { UserActivity } from \"../../app/models/Profiles\";\nconst panes = [\n  { menuItem: \"Future Events\", pane: { key: \"future\" } },\n  { menuItem: \"Past Events\", pane: { key: \"past\" } },\n  { menuItem: \"Hosting\", pane: { key: \"hosting\" } },\n];\nexport default observer(function ProfileActivities() {\n  const { profileStore } = useStore();\n  const {\n    loadActivities,\n    profile,\n    loadingActivities,\n    UserActivities,\n  } = profileStore;\n\n  useEffect(() => {\n    loadActivities(profile!.username);\n  }, [loadActivities, profile]);\n\n  const handleTabChange = (e: SyntheticEvent, data: TabProps) => {\n    loadActivities(\n      profile!.username,\n      panes[data.activeIndex as number].pane.key\n    );\n  };\n\n  return (\n    <Tab.Pane loading={loadingActivities}>\n      <Grid>\n        <Grid.Column width={16}>\n          <Header floated=\"left\" icon=\"calendar\" content={\"Activities\"} />\n        </Grid.Column>\n        <Grid.Column width={16}>\n          <Tab\n            panes={panes}\n            menu={{ secondary: true, pointing: true }}\n            onTabChange={(e, data) => handleTabChange(e, data)}\n            activeIndex={0}\n          />\n          <br />\n          <Card.Group itemsPerRow={4}>\n            {UserActivities.map((activity: UserActivity) => (\n              <Card\n                as={Link}\n                to={`/activities/${activity.id}`}\n                key={activity.id}\n              >\n                <Image\n                  src={`/assets/categoryImages/${activity.category}.jpg`}\n                  style={{ minHeight: 100, objectFit: \"cover\" }}\n                />\n                <Card.Content>\n                  <Card.Header textAlign=\"center\">{activity.title}</Card.Header>\n                  <Card.Meta textAlign=\"center\">\n                    <div>{format(new Date(activity.date), \"do LLL\")}</div>\n                    <div>{format(new Date(activity.date), \"h:mm a\")}</div>\n                  </Card.Meta>\n                </Card.Content>\n              </Card>\n            ))}\n          </Card.Group>\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport React, { useEffect } from \"react\";\nimport { Card, Grid, Header, Tab } from \"semantic-ui-react\";\nimport { useStore } from \"../../app/stores/store\";\nimport ProfileCard from \"./ProfileCard\";\n\nexport default observer(function ProfileFollowings() {\n  const { profileStore } = useStore();\n  const { profile, loadingFollowings, followings, activeTab } = profileStore;\n\n  return (\n    <Tab.Pane loading={loadingFollowings}>\n      <Grid>\n        <Grid.Column width={16}>\n          <Header\n            floated=\"left\"\n            icon=\"user\"\n            content={\n              activeTab === 3\n                ? `People following ${profile?.displayName}`\n                : `People ${profile?.displayName} is following`\n            }\n          />\n        </Grid.Column>\n        <Grid.Column width={16}>\n          <Card.Group>\n            {followings.map((profile) => (\n              <ProfileCard profile={profile} />\n            ))}\n          </Card.Group>\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  );\n});\n","import React, { useCallback } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { Header, Icon } from \"semantic-ui-react\";\n\ninterface Props {\n  setFiles: (files: any) => void;\n}\n\nexport default function PhotoUploadWidgetDropzone({ setFiles }: Props) {\n  const dzStyles = {\n    border: \"dashed 3px #eee\",\n    borderColor: \"red\",\n    borderRadius: \"5px\",\n    paddingTop: \"30px\",\n    textAlign: \"center\" as \"center\",\n    height: 200,\n  };\n\n  const dzActive = {\n    borderColor: \"green\",\n  };\n\n  const onDrop = useCallback(\n    (acceptedFiles) => {\n      setFiles(\n        acceptedFiles.map((file: any) =>\n          Object.assign(file, {\n            preview: URL.createObjectURL(file),\n          })\n        )\n      );\n    },\n    [setFiles]\n  );\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\n\n  return (\n    <div\n      {...getRootProps()}\n      style={isDragActive ? { ...dzStyles, ...dzActive } : dzStyles}\n    >\n      <input {...getInputProps()} />\n      <Icon name=\"upload\" size=\"huge\" />\n      <Header content=\"Drop Image here\" />\n    </div>\n  );\n}\n","import { Cropper } from \"react-cropper\";\nimport \"cropperjs/dist/cropper.css\";\n\ninterface Props {\n  imagePreview: string;\n  setCropper: (cropper: Cropper) => void;\n}\nexport default function PhotoWidgetCropper({\n  imagePreview,\n  setCropper,\n}: Props) {\n  return (\n    <Cropper\n      src={imagePreview}\n      style={{ height: 200, width: \"100%\" }}\n      initialAspectRatio={1}\n      aspectRatio={1}\n      preview=\".img-preview\"\n      guides={false}\n      viewMode={1}\n      autoCropArea={1}\n      background={false}\n      onInitialized={(cropper) => setCropper(cropper)}\n    />\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport { Button, Grid, Header } from \"semantic-ui-react\";\nimport PhotoUploadWidgetDropzone from \"./PhotoUploadWidgetDropzone\";\nimport PhotoWidgetCropper from \"./PhotoWidgetCropper\";\n\ninterface Props {\n  photoUpload: (file: Blob) => void;\n  loading: boolean;\n}\n\nexport default function PhotoUploadWidget({ photoUpload, loading }: Props) {\n  const [files, setFiles] = useState<any>([]);\n  const [cropper, setCropper] = useState<Cropper>();\n\n  function onCrop() {\n    if (cropper) {\n      cropper.getCroppedCanvas().toBlob((blob) => photoUpload(blob!));\n    }\n  }\n\n  useEffect(() => {\n    return () => {\n      files.forEach((file: any) => URL.revokeObjectURL(file.preview));\n    };\n  }, [files]);\n  return (\n    <Grid>\n      <Grid.Column width={4}>\n        <Header sub color=\"teal\" content=\"Step 1 - Upload the photo\" />\n        <PhotoUploadWidgetDropzone setFiles={setFiles} />\n      </Grid.Column>\n      <Grid.Column width={1} />\n      <Grid.Column width={4}>\n        <Header sub color=\"teal\" content=\"Step 2 - Resize Image\" />\n        {files && files.length > 0 && (\n          <PhotoWidgetCropper\n            setCropper={setCropper}\n            imagePreview={files[0].preview}\n          />\n        )}\n      </Grid.Column>\n      <Grid.Column width={1} />\n      <Grid.Column width={4}>\n        <Header sub color=\"teal\" content=\"Step 3 - Preview & Upload\" />\n        {files && files.length > 0 && (\n          <>\n            <div\n              className=\"img-preview\"\n              style={{ minHeight: 200, overflow: \"hidden\" }}\n            />\n\n            <Button.Group widths={2}>\n              <Button\n                loading={loading}\n                onClick={onCrop}\n                positive\n                icon=\"check\"\n              />\n              <Button\n                disabled={loading}\n                onClick={() => setFiles([])}\n                icon=\"close\"\n              />\n            </Button.Group>\n          </>\n        )}\n      </Grid.Column>\n    </Grid>\n  );\n}\n","import { observer } from \"mobx-react-lite\";\nimport { SyntheticEvent, useState } from \"react\";\nimport {\n  Card,\n  Header,\n  Tab,\n  Image,\n  Grid,\n  Button,\n  ButtonContent,\n} from \"semantic-ui-react\";\nimport PhotoUploadWidget from \"../../app/common/imageUpload/PhotoUploadWidget\";\nimport { Photo, Profile } from \"../../app/models/Profiles\";\nimport { useStore } from \"../../app/stores/store\";\n\ninterface Props {\n  profile: Profile;\n}\n\nexport default observer(function ProfilePhotos({ profile }: Props) {\n  const photos = profile.photos;\n  const {\n    profileStore: {\n      isCurrentUser,\n      uploadPhoto,\n      uploading,\n      loading,\n      setMainPhoto,\n      deletePhoto,\n    },\n  } = useStore();\n  const [addPhotoMode, setAddPhotoMode] = useState(false);\n  const [target, setTarget] = useState(\"\");\n\n  function handlePhotoUpload(file: Blob) {\n    uploadPhoto(file).then(() => setAddPhotoMode(false));\n  }\n\n  function handleSetMainPhoto(\n    photo: Photo,\n    e: SyntheticEvent<HTMLButtonElement>\n  ) {\n    setTarget(e.currentTarget.name);\n    setMainPhoto(photo);\n  }\n\n  function handleDeletePhoto(\n    photo: Photo,\n    e: SyntheticEvent<HTMLButtonElement>\n  ) {\n    setTarget(e.currentTarget.name);\n    deletePhoto(photo);\n  }\n\n  return (\n    <Tab.Pane>\n      <Grid>\n        <Grid.Column width={16}>\n          <Header floated=\"left\" icon=\"image\" content=\"Photos\" />\n          {isCurrentUser && (\n            <Button\n              basic\n              floated=\"right\"\n              content={addPhotoMode ? \"Cancel\" : \"Add Photo\"}\n              onClick={() => setAddPhotoMode(!addPhotoMode)}\n            />\n          )}\n        </Grid.Column>\n        <Grid.Column width={16}>\n          {addPhotoMode ? (\n            <PhotoUploadWidget\n              photoUpload={handlePhotoUpload}\n              loading={uploading}\n            />\n          ) : (\n            <Card.Group itemsPerRow={5}>\n              {photos?.map((photo) => (\n                <Card key={photo.id}>\n                  <Image src={photo.url} />\n                  {isCurrentUser && (\n                    <Button.Group fluid widths={2}>\n                      <Button\n                        basic\n                        color=\"green\"\n                        content=\"Main\"\n                        name={photo.id}\n                        disabled={photo.isMain}\n                        loading={target === photo.id && loading}\n                        onClick={(e) => handleSetMainPhoto(photo, e)}\n                      />\n                      <Button\n                        basic\n                        color=\"red\"\n                        icon=\"trash\"\n                        name={\"delete\" + photo.id}\n                        disabled={photo.isMain}\n                        loading={target === \"delete\" + photo.id && loading}\n                        onClick={(e) => handleDeletePhoto(photo, e)}\n                      />\n                    </Button.Group>\n                  )}\n                </Card>\n              ))}\n            </Card.Group>\n          )}\n        </Grid.Column>\n      </Grid>\n    </Tab.Pane>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { Tab } from \"semantic-ui-react\";\nimport { Profile } from \"../../app/models/Profiles\";\nimport { useStore } from \"../../app/stores/store\";\nimport ProfileAbout from \"./ProfileAbout\";\nimport ProfileActivities from \"./ProfileActivities\";\nimport ProfileFollowings from \"./ProfileFollowings\";\nimport ProfilePhotos from \"./ProfilePhotos\";\n\ninterface Props {\n  profile: Profile;\n}\n\nexport default observer(function ProfileContent({ profile }: Props) {\n  const { profileStore } = useStore();\n  const panes = [\n    { menuItem: \"About\", render: () => <ProfileAbout /> },\n    { menuItem: \"Photos\", render: () => <ProfilePhotos profile={profile} /> },\n    {\n      menuItem: \"Events\",\n      render: () => <ProfileActivities />,\n    },\n    {\n      menuItem: \"Followers\",\n      render: () => <ProfileFollowings />,\n    },\n    {\n      menuItem: \"Following\",\n      render: () => <ProfileFollowings />,\n    },\n  ];\n  return (\n    <Tab\n      menu={{ fluid: true, vertical: true }}\n      menuPosition=\"right\"\n      panes={panes}\n      onTabChange={(e, data) => profileStore.setActiveTab(data.activeIndex)}\n    />\n  );\n});\n","import { observer } from \"mobx-react-lite\";\nimport React from \"react\";\nimport {\n  Button,\n  Divider,\n  Grid,\n  Header,\n  Item,\n  Reveal,\n  Segment,\n  Statistic,\n} from \"semantic-ui-react\";\nimport { Profile } from \"../../app/models/Profiles\";\nimport FollowButton from \"./FollowButton\";\n\ninterface Props {\n  profile: Profile;\n}\n\nexport default observer(function ProfileHeader({ profile }: Props) {\n  return (\n    <Segment>\n      <Grid>\n        <Grid.Column width={12}>\n          <Item.Group>\n            <Item>\n              <Item.Image src={profile.image || \"/assets/user.png\"} />\n              <Item.Content verticalAlign=\"middle\">\n                <Header as=\"h1\" content={profile.displayName} />\n              </Item.Content>\n            </Item>\n          </Item.Group>\n        </Grid.Column>\n        <Grid.Column width={4}>\n          <Statistic.Group widths={2}>\n            <Statistic label=\"Followers\" value={profile.followersCount} />\n            <Statistic label=\"Following\" value={profile.followingCount} />\n          </Statistic.Group>\n          <Divider />\n          <FollowButton profile={profile} />\n        </Grid.Column>\n      </Grid>\n    </Segment>\n  );\n});\n","import { getQueriesForElement } from \"@testing-library/dom\";\nimport { observer } from \"mobx-react-lite\";\nimport React, { useEffect } from \"react\";\nimport { useParams } from \"react-router\";\nimport { Grid, Segment } from \"semantic-ui-react\";\nimport LoadingComponent from \"../../app/layout/LoadingComponent\";\nimport { useStore } from \"../../app/stores/store\";\nimport ProfileContent from \"./ProfileContent\";\nimport ProfileHeader from \"./ProfileHeader\";\n\nexport default observer(function ProfilePage() {\n  const { username } = useParams<{ username: string }>();\n  const { profileStore } = useStore();\n  const { loadProfile, loadingProfile, profile, setActiveTab } = profileStore;\n\n  useEffect(() => {\n    loadProfile(username);\n    return () => {\n      setActiveTab(0);\n    };\n  }, [profileStore, username]);\n\n  if (loadingProfile) return <LoadingComponent content=\"Loading Profile...\" />;\n\n  return (\n    <Grid>\n      <Grid.Column width=\"16\">\n        {profile && (\n          <>\n            <ProfileHeader profile={profile} />\n            <ProfileContent profile={profile} />\n          </>\n        )}\n      </Grid.Column>\n    </Grid>\n  );\n});\n","import { observer } from \"mobx-react-lite\";\r\nimport React from \"react\";\r\nimport { Redirect, RouteComponentProps, RouteProps } from \"react-router\";\r\nimport { Route } from \"react-router-dom\";\r\nimport { useStore } from \"../stores/store\";\r\n\r\ninterface Props extends RouteProps {\r\n  component:\r\n    | React.ComponentType<RouteComponentProps<any>>\r\n    | React.ComponentType<any>;\r\n}\r\n\r\nexport default observer(function PrivateRoute({\r\n  component: Component,\r\n  ...rest\r\n}: Props) {\r\n  const {\r\n    userStore: { isLoggedIn },\r\n  } = useStore();\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        isLoggedIn ? <Component {...props} /> : <Redirect to=\"/\" />\r\n      }\r\n    />\r\n  );\r\n});\r\n","import { useEffect } from \"react\";\nimport { Container } from \"semantic-ui-react\";\nimport NavBar from \"./NavBar\";\nimport ActivityDashboard from \"../../features/activities/dashboard/ActivityDashboard\";\nimport { observer } from \"mobx-react-lite\";\nimport { Route, Switch, useLocation } from \"react-router\";\nimport HomePage from \"../../features/home/HomePage\";\nimport ActivityForm from \"../../features/activities/form/ActivityForm\";\nimport ActivityDetail from \"../../features/activities/details/ActivityDetail\";\nimport TestErrors from \"../../features/errors/TestError\";\nimport { ToastContainer } from \"react-toastify\";\nimport NotFound from \"../../features/errors/NotFound\";\nimport ServerError from \"../../features/errors/ServerError\";\nimport { useStore } from \"../stores/store\";\nimport LoadingComponent from \"./LoadingComponent\";\nimport ModalContainer from \"../common/modals/ModalContainer\";\nimport ProfilePage from \"../../features/profiles/ProfilePage\";\nimport PrivateRoute from \"./PrivateRoute\";\n\nfunction App() {\n  const location = useLocation();\n  const { commonStore, userStore } = useStore();\n\n  useEffect(() => {\n    if (commonStore.token) {\n      userStore.getUser().finally(() => commonStore.setAppLoaded());\n    } else {\n      commonStore.setAppLoaded();\n    }\n  }, [commonStore, userStore]);\n\n  if (!commonStore.appLoaded)\n    return <LoadingComponent content=\"Loading App...\" />;\n\n  return (\n    <>\n      <ToastContainer position=\"bottom-right\" hideProgressBar />\n      <ModalContainer />\n      <Route exact path=\"/\" component={HomePage} />\n      <Route\n        path={\"/(.+)\"}\n        render={() => (\n          <>\n            <NavBar />\n            <Container style={{ marginTop: \"7em\" }}>\n              <Switch>\n                <PrivateRoute exact path=\"/activities\" component={ActivityDashboard} />\n                <PrivateRoute\n                  key={location.key}\n                  path={[\"/createActivity\", `/manage/:id`]}\n                  component={ActivityForm}\n                />\n                <PrivateRoute path=\"/activities/:id\" component={ActivityDetail} />\n                <PrivateRoute path=\"/errors\" component={TestErrors} />\n                <PrivateRoute path=\"/profiles/:username\" component={ProfilePage} />\n                <PrivateRoute path=\"/server-error\" component={ServerError} />\n                <Route component={NotFound} />\n              </Switch>\n            </Container>\n          </>\n        )}\n      />\n    </>\n  );\n}\n\nexport default observer(App);\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nexport default function ScrollToTop() {\r\n  const { pathname } = useLocation();\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n  }, [pathname]);\r\n\r\n  return null;\r\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"react-calendar/dist/Calendar.css\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport \"./app/layout/styles.css\";\nimport App from \"./app/layout/App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { store, StoreContext } from \"./app/stores/store\";\nimport { Router } from \"react-router-dom\";\nimport { createBrowserHistory } from \"history\";\nimport ScrollToTop from \"./app/layout/ScrollToTop\";\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n  <StoreContext.Provider value={store}>\n    <Router history={history}>\n      <ScrollToTop />\n      <App />\n    </Router>\n  </StoreContext.Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}